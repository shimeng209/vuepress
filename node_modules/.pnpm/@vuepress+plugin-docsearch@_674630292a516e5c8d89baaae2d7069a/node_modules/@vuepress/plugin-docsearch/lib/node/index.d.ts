import { Plugin } from 'vuepress/core';
import { DocSearchProps } from '@docsearch/react';
import { LocaleConfig } from 'vuepress/shared';

type DeepRequired<T> = {
    [P in keyof T]-?: T[P] extends object ? DeepRequired<T[P]> : T[P];
};
type DocSearchLocaleData = DeepRequired<Pick<DocSearchProps, 'placeholder' | 'translations'>>;

type DocSearchLocaleOptions = Partial<Pick<DocSearchProps, 'apiKey' | 'appId' | 'disableUserPersonalization' | 'indexName' | 'initialQuery' | 'maxResultsPerGroup' | 'placeholder' | 'searchParameters' | 'translations'>>;
interface DocSearchOptions extends DocSearchLocaleOptions {
    locales?: LocaleConfig<DocSearchLocaleOptions>;
}

/**
 * Options for @vuepress/plugin-docsearch
 */
interface DocSearchPluginOptions extends DocSearchOptions {
    /**
     * Base path of the search index
     */
    indexBase?: string;
    /**
     * Whether to inject docsearch default styles
     */
    injectStyles?: boolean;
}
declare const docsearchPlugin: ({ injectStyles, indexBase, locales, ...options }?: DocSearchPluginOptions) => Plugin;

export { docsearchPlugin };
export type { DocSearchLocaleData, DocSearchLocaleOptions, DocSearchOptions, DocSearchPluginOptions };
