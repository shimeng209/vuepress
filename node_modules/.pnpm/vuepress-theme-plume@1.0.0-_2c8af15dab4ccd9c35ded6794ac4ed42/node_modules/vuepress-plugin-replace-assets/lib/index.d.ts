import { Plugin } from 'vuepress/core';
import * as vite from 'vite';

type Replacement = string | ((url: string) => string);
interface ReplacementRule {
    find: RegExp | string;
    replacement: Replacement;
}
interface ReplaceAssetsOptions {
    rules?: ReplacementRule | ReplacementRule[];
    all?: Replacement;
    image?: Replacement;
    media?: Replacement;
}
type ReplaceAssetsPluginOptions = Replacement | ReplacementRule | ReplacementRule[] | ReplaceAssetsOptions;

declare function createFindPattern(extensions: string[]): RegExp;
declare function normalizeRules(options: ReplaceAssetsPluginOptions): ReplacementRule[];

declare function replaceAssetsPlugin(options?: ReplaceAssetsPluginOptions): Plugin;

declare function transformAssets(code: string, pattern: RegExp, rules: ReplacementRule[]): string;
declare function replacementAssetWithRules(rules: ReplacementRule[], url: string): string | void;
declare function isMatchUrl(find: string | RegExp, url: string): boolean;

declare const createVitePlugin: () => (options: ReplacementRule[]) => vite.Plugin<any> | vite.Plugin<any>[];
declare const createWebpackPlugin: () => (options: ReplacementRule[]) => WebpackPluginInstance;

export { type ReplaceAssetsOptions, type ReplaceAssetsPluginOptions, type Replacement, type ReplacementRule, createFindPattern, createVitePlugin, createWebpackPlugin, isMatchUrl, normalizeRules, replaceAssetsPlugin, replacementAssetWithRules, transformAssets };
