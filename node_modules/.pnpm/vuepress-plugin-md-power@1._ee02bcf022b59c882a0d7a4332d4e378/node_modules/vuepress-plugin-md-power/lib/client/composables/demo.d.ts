import * as vue from 'vue';
import { ShallowRef, MaybeRefOrGetter } from 'vue';

interface DemoConfig {
    html: string;
    css: string;
    script: string;
    jsLib: string[];
    cssLib: string[];
}
declare function useExpand(defaultExpand?: boolean): readonly [vue.Ref<boolean, boolean>, () => void];
declare function useResources(el: ShallowRef<HTMLDivElement | null>, config: MaybeRefOrGetter<DemoConfig | undefined>): {
    resources: vue.ComputedRef<{
        name: string;
        items: {
            name: string;
            url: string;
        }[];
    }[]>;
    showResources: vue.Ref<boolean, boolean>;
    toggleResources: () => void;
};
declare function useFence(fence: ShallowRef<HTMLDivElement | null>, config: MaybeRefOrGetter<DemoConfig | undefined>): vue.Ref<{
    js: string;
    css: string;
    html: string;
    jsType: string;
    cssType: string;
}, {
    js: string;
    css: string;
    html: string;
    jsType: string;
    cssType: string;
} | {
    js: string;
    css: string;
    html: string;
    jsType: string;
    cssType: string;
}>;
declare function useNormalDemo(draw: ShallowRef<HTMLIFrameElement | null>, title: MaybeRefOrGetter<string | undefined>, config: MaybeRefOrGetter<DemoConfig | undefined>): {
    id: string;
    height: vue.Ref<string, string>;
};
declare function parseData(data: any): any;

export { type DemoConfig, parseData, useExpand, useFence, useNormalDemo, useResources };
