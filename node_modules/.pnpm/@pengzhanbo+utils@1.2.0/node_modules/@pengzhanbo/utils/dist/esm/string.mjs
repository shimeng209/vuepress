export function slash(s) {
  return s.replace(/\\/g, "/");
}
export function ensurePrefix(prefix, str) {
  if (str.startsWith(prefix))
    return str;
  return prefix + str;
}
export function ensureSuffix(suffix, str) {
  if (str.endsWith(suffix))
    return str;
  return str + suffix;
}
export const CASE_SPLIT_PATTERN = /\p{Lu}?\p{Ll}+|\d+|\p{Lu}+(?!\p{Ll})|[\p{Emoji_Presentation}\p{Extended_Pictographic}]|\p{L}+/gu;
export function words(str) {
  return Array.from(str.match(CASE_SPLIT_PATTERN) ?? []);
}
export function capitalize(s) {
  if (!s)
    return s;
  return s[0].toUpperCase() + s.slice(1).toLowerCase();
}
export function kebabCase(str) {
  const parts = words(str);
  if (parts.length === 0)
    return "";
  return parts.map((word) => word.toLowerCase()).join("-");
}
export function snakeCase(str) {
  const parts = words(str);
  if (parts.length === 0)
    return "";
  return parts.map((word) => word.toLowerCase()).join("_");
}
export function camelCase(str) {
  const parts = words(str);
  if (parts.length === 0)
    return "";
  const [first, ...rest] = parts;
  return `${first.toLowerCase()}${rest.map((word) => capitalize(word)).join("")}`;
}
export function lowerCase(str) {
  const parts = words(str);
  if (parts.length === 0)
    return "";
  return parts.map((word) => word.toLowerCase()).join(" ");
}
export function upperCase(str) {
  const parts = words(str);
  if (parts.length === 0)
    return "";
  return parts.map((word) => word.toUpperCase()).join(" ");
}
export function pascalCase(str) {
  const parts = words(str);
  if (parts.length === 0)
    return "";
  return parts.map((word) => capitalize(word)).join("");
}
